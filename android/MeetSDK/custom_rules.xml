<?xml version="1.0" encoding="UTF-8"?>
<project name="custom_rules" default="release">
	<!-- rename output jar-->
	<!--property name="out.library.jar.file" location="${out.absolute.dir}/${ant.project.name}.jar" /-->
	
	<property name="SdkName" value="meet_sdk" />
	
	<property name="src.dir" location="src" />
	
	<property name="obj.dir" location="obj" />
	<property name="libs.dir" location="libs" />
	
	<property name="output.dir" location="output" />
	<property name="symbol.dir" location="syms" />
	<property name="dist.dir" location="dist" />
	<property name="bin.dir" location="bin" />
	
	<tstamp>
		<format property="build.timestamp" pattern="yyyyMMddHHmm" />
	</tstamp>
	<condition property="sdk.version" value="${Version}" else="${build.timestamp}">
		<isset property="Version" />
	</condition>

	<target name="-gen_version">
		<condition property="config.sdk.version" value="${sdk.version}" else="${sdk.version}_debug" >
			<isfalse value="${debug}" />
		</condition>
		
		<condition property="config.startp2p" value="true" else="false">
			<and>
				<isset property="StartP2P" />
				<equals arg1="${StartP2P}" arg2="true" casesensitive="false" trim="true" />
			</and>
		</condition>
		
		<copy file="${src.dir}/android/pplive/media/config/Config.java.template" tofile="${src.dir}/android/pplive/media/config/Config.java" filtering="true" overwrite="true">
			<filterset>
				<filter token="CONFIG.SDK.VERSION" value="${config.sdk.version}" />
				<filter token="CONFIG.STARTP2P" value="${config.startp2p}"/>
			</filterset>
		</copy>
	</target>
	
	<target name="-symbol">
		<mkdir dir="${symbol.dir}" />
		<copy todir="${symbol.dir}/armeabi" overwrite="true" verbose="true">
			<fileset dir="${obj.dir}/local/armeabi">
				<filename name="**/*.so" />
			</fileset>
		</copy>
		<copy todir="${symbol.dir}/x86" overwrite="true" verbose="true">
			<fileset dir="${obj.dir}/local/x86">
				<filename name="**/*.so" />
			</fileset>
		</copy>
		<copy todir="${symbol.dir}/arm64-v8a" overwrite="true" verbose="true">
			<fileset dir="${obj.dir}/local/arm64-v8a">
				<filename name="**/*.so" />
			</fileset>
		</copy>
		<zip destfile="${dist.dir}/${SdkName}_symbol_${sdk.version}.zip" basedir="${symbol.dir}"/>
	</target>
	
	<target name="-pre-build" depends="-gen_version, -ndk-build"> 
	</target> 
	
	<target name="-ndk-build" if="need-build-ndk" > 
		<condition property="ndk-build-command" value="${NDK_HOME}/ndk-build.cmd" else="ndk-build">
			<os family="windows" />
		</condition>
		
		<exec executable="${ndk-build-command}" failonerror="true"> 
			<arg value="clean" /> 
		</exec> 
		<exec executable="${ndk-build-command}" failonerror="true" /> 
	</target>
	
	<target name="-set-custom-debug-mode">
		<property name="debug" value="true" />
	</target>
	
	<target name="-set-build-ndk">
		<property name="need-build-ndk" value="true" />
	</target>
	
	<target name="-set-dist">
		<property name="need-dist" value="true" />
	</target>
	
	<target name="-post-build" if="need-dist" >
		<mkdir dir="${output.dir}" />
		<condition property="jar.filename" value="${bin.dir}/proguard/obfuscated.jar" else="${out.absolute.dir}/classes.jar" >
			<isfalse value="${debug}" />
		</condition>
		<copy 
			file="${out.absolute.dir}/classes.jar" 
			tofile="${output.dir}/${ant.project.name}.jar" 
			filtering="true" 
			overwrite="true" >
		</copy>
		<copy 
			file="${out.absolute.dir}/classes.jar" 
			tofile="${out.absolute.dir}/${ant.project.name}.jar" 
			filtering="true" 
			overwrite="true" >
		</copy>
		<copy todir="${output.dir}/libs" overwrite="true" verbose="true">
			<fileset dir="${libs.dir}">
				<filename name="**/*.so" />
			</fileset>
		</copy>
		<condition property="build.config" value="release" else="debug" >
			<isfalse value="${debug}" />
		</condition>
		<zip destfile="${dist.dir}/${SdkName}_${build.config}_${sdk.version}.zip" basedir="${output.dir}" />
	</target>
	
	<target
        name="debug"
        depends="-set-dist, -set-custom-debug-mode, -set-build-ndk, android_rules.debug"
		description="compile c and java source for debug" />

    <target
        name="release"
        depends="-set-dist, -set-build-ndk, android_rules.release, -symbol"
		description="compile c and java source, gen symbol file for release" />
		
	<target
        name="java"
        depends="android_rules.debug"
		description="compile java source for test" >
		<copy 
			file="${out.absolute.dir}/classes.jar" 
			tofile="../MeetPlayer/libs/MeetSDK.jar"
			overwrite="true" >
		</copy>
	</target>
	
	<target name="-pre-clean" >
		<delete dir="${obj.dir}" />
		<delete dir="${libs.dir}/armeabi" />
		<delete dir="${libs.dir}/x86" />
		<delete dir="${libs.dir}/arm64-v8a" />
		<delete dir="${output.dir}" />
		<delete dir="${symbol.dir}" />
	</target>
</project>